<?xml version="1.0" encoding="utf-8"?>
<project name="CUSTOM POST VERSIONBUILDER" default="go" xmlns="http://nant.sf.net/nightly/2006-03-08-0.85/nant.xsd">
  <!-- Project UppercuT - http://projectuppercut.org -->
  <property name="build.config.settings" value="__NONE__" overwrite="false" />
  <include buildfile="${build.config.settings}" if="${file::exists(build.config.settings)}" />
  <property name="path.separator" value="${string::trim(path::combine(' ', ' '))}" />
  <property name="dirs.current" value="${directory::get-current-directory()}" />
  <property name="dirs.current.file" value="${directory::get-parent-directory(project::get-buildfile-path())}" />
  <property name="folder.build_scripts" value="build" overwrite="false" />
  <property name="folder.build_scripts_custom" value="build.custom" overwrite="false" />
  <property name="dirs.build_scripts_custom" value="${dirs.current}${path.separator}${folder.build_scripts_custom}" />
  <property name="folder.code_build" value="build_output" overwrite="false" />
  <property name="dirs.build" value="${dirs.current}${path.separator}${folder.code_build}" />
  <property name="folder.code_drop" value="code_drop" overwrite="false" />
  <property name="dirs.drop" value="${dirs.current}${path.separator}${folder.code_drop}" overwrite="false" />
  <property name="folder.app.drop" value="${project.name}" overwrite="false" />
  <property name="folder.database" value="__DATABASE_FOLDER_NAME__" overwrite="false" />
  <property name="dirs.database" value="${dirs.current}${path.separator}${folder.database}" overwrite="false" />
  <property name="folder.reports" value="${project.name}.Reports" overwrite="false" />
  <property name="dirs.reports" value="${dirs.current}${path.separator}${folder.reports}" overwrite="false" />
  <property name="folder.file_server" value="file.server" overwrite="false" />
  <property name="dirs.file_server" value="${dirs.current}${path.separator}${folder.file_server}" overwrite="false" />
  <property name="folder.environment_files" value="environment.files" overwrite="false" />
  <property name="dirs.environment_files" value="${dirs.current}${path.separator}${folder.environment_files}" overwrite="false" />
  <property name="folder.deployment" value="deployment" overwrite="false" />
  <property name="dirs.deployment" value="${dirs.current}${path.separator}${folder.deployment}" overwrite="false" />
  <property name="folder.settings" value="settings" overwrite="false" />
  <property name="dirs.settings" value="${dirs.current}${path.separator}${folder.settings}" overwrite="false" />
  <property name="folder.documentation" value="docs" overwrite="false" />
  <property name="dirs.docs" value="${dirs.current}${path.separator}${folder.documentation}" overwrite="false" />
  <property name="folder.references" value="lib" overwrite="false" />
  <property name="dirs.lib" value="${dirs.current}${path.separator}${folder.references}" overwrite="false" />
  <target name="go" depends="run_tasks" />
  <target name="run_tasks">
    <echo level="Warning" message="" />
    <call target="generate_assembly_info_VB" />
  </target>

  <target name="generate_assembly_info_VB" description="Generate assembly info">
    <property name="version.assembly" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
    <property name="version.assembly" value="${version.major}.${version.minor}.${version.patch}.0"  if="${version.use_semanticversioning}" />
    <echo level="Warning" message="Generating SolutionVersion.vb with assembly version ${version.assembly}." />
    <property name="version.file" value="${version.major}.${version.minor}.${version.build}.${version.revision}" />
    <property name="version.file" value="${version.major}.${version.minor}.${version.patch}.${version.build}" if="${version.use_semanticversioning}" />
    <property name="version.product" value="${version.major}.${version.minor}.${version.build}.${version.hash}" />
    <property name="version.product" value="${version.major}.${version.minor}.${version.patch}.${version.hash}" if="${version.use_semanticversioning}" />

    <!-- remove TFS read only if there -->
    <attrib file="${dirs.current}${path.separator}${path_to_solution}${path.separator}SolutionVersion.vb" normal="true" if="${file::exists(path.file.version)}" />

    <asminfo output="${dirs.current}${path.separator}${path_to_solution}${path.separator}SolutionVersion.vb" language="VB">
      <imports>
        <import namespace="System" />
        <import namespace="System.Reflection" />
        <import namespace="System.Runtime.InteropServices" />
        <import namespace="System.Runtime.CompilerServices" />
        <import namespace="System.Security" />
      </imports>
      <attributes>
        <attribute type="ComVisibleAttribute" value="false" />
        <attribute type="CLSCompliantAttribute" value="${assembly.clscompliant}" />
        <attribute type="AssemblyCompanyAttribute" value="${company.name}" />
        <attribute type="AssemblyVersionAttribute" value="${version.assembly}" />
        <attribute type="AssemblyFileVersionAttribute" value="${version.file}" />
        <attribute type="AssemblyInformationalVersionAttribute" value="${version.product}" />
        <attribute type="AssemblyTitleAttribute" value="${project.name}" />
        <attribute type="AssemblyProductAttribute" value="${project.name}" />
        <attribute type="AssemblyDescriptionAttribute" value="${assembly.description}" />
        <attribute type="AssemblyTrademarkAttribute" value="${project.name} - ${company.name}" />
        <attribute type="AssemblyCopyrightAttribute" value="Copyright ©  ${datetime::get-year(datetime::now())} ${company.name}, - Original author or authors" />
        <attribute type="AllowPartiallyTrustedCallers" if="${allow.partially_trusted_callers}" asis="true" />
        <attribute type="AssemblyKeyFileAttribute" value="${file.key.name.private}" if="${sign.project_with_key and not sign.key.use_relative_pathing}" />
        <attribute type="AssemblyKeyFileAttribute" value="${sign.key.relative_path_from_projects}${path.separator}${path::get-file-name(file.key.name.private)}" if="${sign.project_with_key and sign.key.use_relative_pathing}" />
        <!--attribute type="SuppressIldasmAttribute" value="true" if="${obsfuscate}" /-->
        <attribute type="ObfuscateAssemblyAttribute" value="false" if="${obfuscate}" />
      </attributes>
    </asminfo>
  </target>
</project>